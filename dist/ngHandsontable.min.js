/**
 * ngHandsontable 0.5.0
 * 
 * Copyright 2012-2014 Marcin Warpechowski
 * Licensed under the MIT license.
 * https://github.com/handsontable/ngHandsontable
 * Date: Fri Dec 12 2014 14:01:16 GMT+0000 (GMT)
*/

document.all&&!document.addEventListener&&(document.createElement("hot-table"),document.createElement("hot-column"),document.createElement("hot-autocomplete")),angular.module("ngHandsontable",["ngHandsontable.services","ngHandsontable.directives"]),angular.module("ngHandsontable.services",[]).factory("settingFactory",[function(){return{containerClassName:"handsontable-container",initializeHandsontable:function(a,b){var c=document.createElement("DIV");return c.className=this.containerClassName,a[0].appendChild(c),new Handsontable(c,b)},updateHandsontableSettings:function(a,b){a&&a.updateSettings(b)},renderHandsontable:function(a){a&&a.render()},setHandsontableSettingsFromScope:function(a,b){var c,d={},e=angular.extend({},b);angular.extend(e,b.settings);for(c in a)a.hasOwnProperty(c)&&"undefined"!=typeof e[a[c]]&&(d[a[c]]=e[a[c]]);return d},getScopeDefinition:function(a){for(var b={datarows:"=",settings:"="},c=0,d=a.length;d>c;c++)b[a[c]]="="+a[c].toLowerCase();return b}}}]).factory("autoCompleteFactory",[function(){return{parseAutoComplete:function(a,b,c,d){b.source=function(e,f){var g=a.getSelected()[0],h=[],i=c[g];if(i){var j=b.optionList;if(j.object){if(angular.isArray(j.object))h=j.object;else{for(var k=j.object.split("."),l=i;k.length>0;){var m=k.shift();l=l[m]}if(d)for(var n=0,o=l.length;o>n;n++)h.push(l[n][j.property]);else h=l}f(h)}}}}}}]),angular.module("ngHandsontable.directives",[]).directive("hotTable",["settingFactory","autoCompleteFactory","$rootScope",function(a,b,c){var d=Object.keys(Handsontable.DefaultSettings.prototype),e=Object.keys(Handsontable.PluginHooks.hooks),f=d.concat(e);return{restrict:"EA",scope:a.getScopeDefinition(f),controller:["$scope",function(a){this.setColumnSetting=function(b){a.htSettings||(a.htSettings={}),a.htSettings.columns||(a.htSettings.columns=[]),a.htSettings.columns.push(b)}}],link:function(d,e,g){if(d.htSettings||(d.htSettings={}),d.htSettings.data=d.datarows,angular.extend(d.htSettings,a.setHandsontableSettingsFromScope(f,d)),d.hotInstance=a.initializeHandsontable(e,d.htSettings),d.htSettings.columns){for(var h=0,i=d.htSettings.columns.length;i>h;h++)if("autocomplete"==d.htSettings.columns[h].type){if("string"==typeof d.htSettings.columns[h].optionList){var j={},k=d.htSettings.columns[h].optionList.match(/^\s*(.+)\s+in\s+(.*)\s*$/);k?(j.property=k[1],j.object=k[2]):j.object=j,d.htSettings.columns[h].optionList=j}b.parseAutoComplete(d.hotInstance,d.htSettings.columns[h],d.datarows,!0)}d.hotInstance.updateSettings(d.htSettings)}d.htSettings.afterChange=function(){c.$$phase||d.$apply()};var l=function(){angular.extend(d.htSettings,a.setHandsontableSettingsFromScope(f,d)),a.updateHandsontableSettings(d.hotInstance,d.htSettings)},m=g.columns;d.$parent.$watch(function(){var a=d.$parent;if(m){for(var b=m.split(".");b.length>0;){var c=b.shift();a=a[c]}return angular.toJson([a])}},l),d.$watchCollection("settings",l),d.$parent.$watch(function(){for(var a=g.datarows.split("."),b=d.$parent;a.length>0;){var c=a.shift();b=b[c]}return angular.toJson([b])},function(){a.renderHandsontable(d.hotInstance)})}}}]).directive("hotColumn",[function(){return{restrict:"E",require:"^hotTable",scope:{},controller:["$scope",function(a){this.setColumnOptionList=function(b){a.column||(a.column={});var c={},d=b.match(/^\s*(.+)\s+in\s+(.*)\s*$/);d?(c.property=d[1],c.object=d[2]):c.object=b.split(","),a.column.optionList=c}}],link:function(a,b,c,d){var e={};for(var f in c)c.hasOwnProperty(f)&&"$"!==f.charAt(0)&&"undefined"==typeof e[f]&&("data"===f?e.data=c[f]:e[f]=a.$eval(c[f]));switch(e.type){case"checkbox":"undefined"!=typeof c.checkedtemplate&&(e.checkedTemplate=a.$eval(c.checkedtemplate)),"undefined"!=typeof c.uncheckedtemplate&&(e.uncheckedTemplate=a.$eval(c.uncheckedtemplate))}"undefined"!=typeof c.readonly&&(e.readOnly=!0),a.column||(a.column={}),angular.extend(a.column,e),d.setColumnSetting(a.column)}}}]).directive("hotAutocomplete",[function(){return{restrict:"E",scope:!0,require:"^hotColumn",link:function(a,b,c,d){var e=c.datarows;d.setColumnOptionList(e)}}}]);