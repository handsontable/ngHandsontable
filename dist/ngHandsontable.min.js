/**
 * ngHandsontable 0.4.0
 * 
 * Copyright 2012-2014 Marcin Warpechowski
 * Licensed under the MIT license.
 * https://github.com/handsontable/ngHandsontable
 * Date: Fri Nov 21 2014 13:52:03 GMT-0800 (Pacific Standard Time)
*/

document.all&&!document.addEventListener&&(document.createElement("hot-table"),document.createElement("hot-column"),document.createElement("hot-autocomplete")),angular.module("ngHandsontable",["ngHandsontable.services","ngHandsontable.directives"]),angular.module("ngHandsontable.services",[]).factory("settingFactory",[function(){return{containerClassName:"handsontable-container",initializeHandsontable:function(a,b){var c=$('<div class="'+this.containerClassName+'"></div>');a.append(c),c.handsontable(b)},updateHandsontableSettings:function(a,b){var c=$(a).find("."+this.containerClassName);c.handsontable("updateSettings",b)},renderHandsontable:function(a){var b=$(a).find("."+this.containerClassName);b.handsontable("render")},setHandsontableSettingsFromScope:function(a,b){var c,d={},e=angular.extend({},b);angular.extend(e,b.settings);for(c in a)a.hasOwnProperty(c)&&"undefined"!=typeof e[a[c]]&&(d[a[c]]=e[a[c]]);return d},getScopeDefinition:function(a){for(var b={datarows:"=",settings:"="},c=0,d=a.length;d>c;c++)b[a[c]]="="+a[c].toLowerCase();return b}}}]).factory("autoCompleteFactory",["settingFactory",function(a){return{parseAutoComplete:function(b,c,d,e){c.source=function(f,g){var h=$(b).find("."+a.containerClassName),i=h.data("handsontable"),j=i.getSelected()[0],k=d[j];if(k){var l=c.optionList;if(l.object){for(var m=l.object.split("."),n=k;m.length>0;){var o=m.shift();n=n[o]}var p=[];if(e)for(var q=0,r=n.length;r>q;q++)p.push(n[q][l.property]);else p=n;g(p)}}}}}}]),angular.module("ngHandsontable.directives",[]).directive("hotTable",["settingFactory","autoCompleteFactory","$rootScope",function(a,b,c){var d=Object.keys(Handsontable.DefaultSettings.prototype),e=Object.keys(Handsontable.PluginHooks.hooks),f=d.concat(e);return{restrict:"EA",scope:a.getScopeDefinition(f),controller:function(a){this.setColumnSetting=function(b){a.htSettings||(a.htSettings={}),a.htSettings.columns||(a.htSettings.columns=[]),a.htSettings.columns.push(b)}},link:function(d,e,g){if(d.htSettings||(d.htSettings={}),d.htSettings.data=d.datarows,angular.extend(d.htSettings,a.setHandsontableSettingsFromScope(f,d)),d.htSettings.columns)for(var h=0,i=d.htSettings.columns.length;i>h;h++)if("autocomplete"==d.htSettings.columns[h].type){if("string"==typeof d.htSettings.columns[h].optionList){var j={},k=d.htSettings.columns[h].optionList.match(/^\s*(.+)\s+in\s+(.*)\s*$/);k?(j.property=k[1],j.object=k[2]):j.object=options,d.htSettings.columns[h].optionList=j}b.parseAutoComplete(e,d.htSettings.columns[h],d.datarows,!0)}d.htSettings.afterChange=function(){c.$$phase||d.$apply()};var l=g.columns;d.$parent.$watch(function(){var a=d.$parent;if(l){for(var b=l.split(".");b.length>0;){var c=b.shift();a=a[c]}return angular.toJson([a])}},function(){angular.extend(d.htSettings,a.setHandsontableSettingsFromScope(f,d.$parent)),a.updateHandsontableSettings(e,d.htSettings)}),d.$parent.$watch(function(){for(var a=g.datarows.split("."),b=d.$parent;a.length>0;){var c=a.shift();b=b[c]}return angular.toJson([b])},function(){a.renderHandsontable(e)}),a.initializeHandsontable(e,d.htSettings)}}}]).directive("hotColumn",[function(){return{restrict:"E",require:"^hotTable",scope:{},controller:function(a){this.setColumnOptionList=function(b){a.column||(a.column={});var c={},d=b.match(/^\s*(.+)\s+in\s+(.*)\s*$/);d?(c.property=d[1],c.object=d[2]):c.object=b,a.column.optionList=c}},link:function(a,b,c,d){var e={};for(var f in c)c.hasOwnProperty(f)&&"$"!==f.charAt(0)&&"undefined"==typeof e[f]&&("data"===f?e.data=c[f]:e[f]=a.$eval(c[f]));switch(e.type){case"checkbox":"undefined"!=typeof c.checkedtemplate&&(e.checkedTemplate=a.$eval(c.checkedtemplate)),"undefined"!=typeof c.uncheckedtemplate&&(e.uncheckedTemplate=a.$eval(c.uncheckedtemplate))}"undefined"!=typeof c.readonly&&(e.readOnly=!0),a.column||(a.column={}),angular.extend(a.column,e),d.setColumnSetting(a.column)}}}]).directive("hotAutocomplete",[function(){return{restrict:"E",scope:!0,require:"^hotColumn",link:function(a,b,c,d){var e=c.datarows;d.setColumnOptionList(e)}}}]);